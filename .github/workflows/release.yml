name: Java CI/CD

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Release tag (e.g., v1.0.0)"
        required: true
  push:
    tags:
      - 'v*'

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build with Maven
        run: mvn clean compile assembly:single

      - name: Get version
        id: get_version
        run: echo "VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_ENV

      - name: Get artifact id
        id: get_artifact_id
        run: echo "ARTIFACT_ID=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' --non-recursive exec:exec)" >> $GITHUB_ENV

      - name: Rename artifact
        run: mv ./target/${{ env.ARTIFACT_ID }}.jar ./target/${{ env.ARTIFACT_ID }}-${{ env.VERSION }}.jar

      - name: Validate version format
        run: |
          if [[ ! "${{ env.VERSION }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::error::Invalid version format: ${{ env.VERSION }}"
            exit 1
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_tag || format('v{0}', env.VERSION) }}
          release_name: Release ${{ env.VERSION }}
          body: "Automated release for version ${{ env.VERSION }}"
          draft: false
          prerelease: false
      
      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/${{ env.ARTIFACT_ID }}-${{ env.VERSION }}.jar
          asset_name: ${{ env.ARTIFACT_ID }}-${{ env.VERSION }}.jar

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: linux/amd64, linux/arm64
          tags: |
            bayuairbenders/mcdash:latest
            bayuairbenders/mcdash:${{ env.VERSION }}
            bayuairbenders/mcdash:${{ github.event.inputs.release_tag || format('v{0}', env.VERSION) }}
          labels: |
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
