name: Java CI/CD

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "releases"
        required: false
  push:
    tags:
      - "v*" 

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build with Maven
        run: mvn clean compile assembly:single

      - name: Get version
        id: get_version
        run: echo "VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' exec:exec)" >> $GITHUB_ENV

      - name: Get artifact id
        id: get_artifact_id
        run: echo "ARTIFACT_ID=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' exec:exec)" >> $GITHUB_ENV

      - name: Determine Release Tag
        id: determine_tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=${{ github.event.inputs.release_tag || env.VERSION }}" >> $GITHUB_ENV
          fi

      - name: Rename artifact
        run: mv ./target/${{ env.ARTIFACT_ID }}.jar ./target/${{ env.ARTIFACT_ID }}-${{ env.RELEASE_TAG }}.jar

      - name: Automatic Releases
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          title: Release ${{ env.RELEASE_TAG }}
          files: |
            ./target/${{ env.ARTIFACT_ID }}-${{ env.RELEASE_TAG }}.jar

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            bayuairbenders/mcdash:latest
            bayuairbenders/mcdash:${{ env.RELEASE_TAG }}
